@using MvcCV.Models.Entity;
@model TBLAdmin
@{
    ViewBag.Title = "Add Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="col-md-12 p-5">
    <h2>Add New Admin User</h2>
    
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
    }
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        @Html.Label("Username")
        @Html.TextBoxFor(x => x.Username, new { @class = "form-control", placeholder = "Enter a Valid Username", @required = "required", @minlength = "3" })
        @Html.ValidationMessageFor(x => x.Username, "", new { @class = "text-danger" })
        <br />
        
        @Html.Label("Password")
        @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Enter a Strong Password", @required = "required", @minlength = "6", @autocomplete = "new-password" })
        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
        <small class="form-text text-muted">Şifreniz en az 6 karakter olmalıdır.</small>
        <br />
        
        <button type="submit" class="btn btn-success">Create Admin User</button>
        <a href="@Url.Action("Index", "Admin")" class="btn btn-secondary">Cancel</a>
    }
</div>

<script>
    // Client-side şifre güvenliği kontrolü
    document.addEventListener('DOMContentLoaded', function() {
        const passwordField = document.querySelector('input[name="Password"]');
        const form = document.querySelector('form');
        
        if (passwordField && form) {
            form.addEventListener('submit', function(e) {
                const password = passwordField.value;
                
                if (password.length < 6) {
                    alert('Şifre en az 6 karakter olmalıdır.');
                    e.preventDefault();
                    return false;
                }
                
                // Basit şifre güvenlik kontrolü
                const hasLetter = /[a-zA-Z]/.test(password);
                const hasNumber = /[0-9]/.test(password);
                
                if (!hasLetter || !hasNumber) {
                    const result = confirm('Şifreniz en az bir harf ve bir rakam içermelidir. Devam etmek istediğinizden emin misiniz?');
                    if (!result) {
                        e.preventDefault();
                        return false;
                    }
                }
            });
        }
    });
</script>
